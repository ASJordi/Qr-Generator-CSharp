<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>